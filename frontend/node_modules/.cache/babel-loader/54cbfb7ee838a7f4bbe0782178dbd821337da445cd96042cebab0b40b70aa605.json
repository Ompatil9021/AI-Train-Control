{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI-Train-Control\\\\frontend\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AuthPage.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    role: 'employee'\n  });\n  const [error, setError] = useState('');\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    const endpoint = isLoginMode ? '/api/login' : '/api/register';\n    const body = isLoginMode ? {\n      username: formData.username,\n      password: formData.password\n    } : {\n      username: formData.username,\n      password: formData.password,\n      role: formData.role\n    };\n    fetch(`http://127.0.0.1:5001${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        if (isLoginMode) {\n          onLoginSuccess(data.user);\n        } else {\n          alert('Registration successful! Please log in.');\n          setIsLoginMode(true);\n        }\n      } else {\n        setError(data.message);\n      }\n    }).catch(() => setError('An error occurred. Please try again.'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLoginMode ? 'Controller Login' : 'Register New User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: formData.username,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"role\",\n          value: formData.role,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"employee\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLoginMode ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggle-mode\",\n        onClick: () => setIsLoginMode(!isLoginMode),\n        children: isLoginMode ? \"Need an account? Register\" : \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"XyRC3OoTe8DfQoPlx15gNdQKkTE=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthPage","onLoginSuccess","_s","isLoginMode","setIsLoginMode","formData","setFormData","username","password","role","error","setError","handleInputChange","e","name","value","target","prevState","handleSubmit","preventDefault","endpoint","body","fetch","method","headers","JSON","stringify","then","response","json","data","success","user","alert","message","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/AI-Train-Control/frontend/src/components/AuthPage.js"],"sourcesContent":["// frontend/src/components/AuthPage.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthPage = ({ onLoginSuccess }) => {\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const [formData, setFormData] = useState({ username: '', password: '', role: 'employee' });\r\n    const [error, setError] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        const endpoint = isLoginMode ? '/api/login' : '/api/register';\r\n        const body = isLoginMode \r\n            ? { username: formData.username, password: formData.password }\r\n            : { username: formData.username, password: formData.password, role: formData.role };\r\n\r\n        fetch(`http://127.0.0.1:5001${endpoint}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                if (isLoginMode) {\r\n                    onLoginSuccess(data.user);\r\n                } else {\r\n                    alert('Registration successful! Please log in.');\r\n                    setIsLoginMode(true);\r\n                }\r\n            } else {\r\n                setError(data.message);\r\n            }\r\n        })\r\n        .catch(() => setError('An error occurred. Please try again.'));\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            <div className=\"auth-form\">\r\n                <h2>{isLoginMode ? 'Controller Login' : 'Register New User'}</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" value={formData.username} onChange={handleInputChange} required />\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleInputChange} required />\r\n                    {!isLoginMode && (\r\n                        <select name=\"role\" value={formData.role} onChange={handleInputChange}>\r\n                            <option value=\"employee\">Employee</option>\r\n                            <option value=\"admin\">Admin</option>\r\n                        </select>\r\n                    )}\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n                    <button type=\"submit\">{isLoginMode ? 'Login' : 'Register'}</button>\r\n                </form>\r\n                <p className=\"toggle-mode\" onClick={() => setIsLoginMode(!isLoginMode)}>\r\n                    {isLoginMode ? \"Need an account? Register\" : \"Already have an account? Login\"}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}