{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-train-control\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport TrainMap from './TrainMap';\nimport './App.css';\n\n// --- Helper function to choose an icon based on train type ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTrainIcon = trainType => {\n  switch (trainType) {\n    case 'EXPRESS':\n      return 'ðŸš„';\n    // High-speed train emoji\n    case 'GOODS':\n      return 'ðŸš‚';\n    // Steam locomotive emoji for goods trains\n    default:\n      return 'ðŸšƒ';\n    // Default railway car emoji\n  }\n};\nfunction App() {\n  _s();\n  const [simulationState, setSimulationState] = useState({\n    trains: [],\n    simulation_time: \"00:00:00\"\n  });\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetch('http://127.0.0.1:5001/api/get_simulation_state').then(response => response.json()).then(data => setSimulationState(data)).catch(error => console.error(\"Error fetching simulation state:\", error));\n    }, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const getTrainPosition = positionKm => {\n    const MAP_START_X = 210;\n    const MAP_END_X = 1310;\n    const ROUTE_LENGTH_KM = 192; // Must match the backend's route length\n\n    // Prevent train from going off-map\n    if (positionKm > ROUTE_LENGTH_KM) {\n      positionKm = ROUTE_LENGTH_KM;\n    }\n    const mapWidth = MAP_END_X - MAP_START_X;\n    const percentage = positionKm / ROUTE_LENGTH_KM;\n    const xPos = MAP_START_X + percentage * mapWidth;\n    const yPos = 151;\n    return {\n      left: xPos,\n      top: yPos\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Train Traffic Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Simulation Time: \", simulationState.simulation_time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(TrainMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), simulationState.trains.map(train => {\n        const position = getTrainPosition(train.position_km);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"train-icon\",\n          style: {\n            left: `${position.left}px`,\n            top: `${position.top}px`\n          },\n          title: `${train.name} (${train.id}) - Status: ${train.status}`,\n          children: [getTrainIcon(train.type), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"train-label\",\n            children: train.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, train.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R0m4WfnNbrKEb4PxyeHhNqDBmWc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TrainMap","jsxDEV","_jsxDEV","getTrainIcon","trainType","App","_s","simulationState","setSimulationState","trains","simulation_time","intervalId","setInterval","fetch","then","response","json","data","catch","error","console","clearInterval","getTrainPosition","positionKm","MAP_START_X","MAP_END_X","ROUTE_LENGTH_KM","mapWidth","percentage","xPos","yPos","left","top","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","train","position","position_km","style","title","name","id","status","type","_c","$RefreshReg$"],"sources":["D:/ai-train-control/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport TrainMap from './TrainMap';\nimport './App.css';\n\n// --- Helper function to choose an icon based on train type ---\nconst getTrainIcon = (trainType) => {\n  switch (trainType) {\n    case 'EXPRESS':\n      return 'ðŸš„'; // High-speed train emoji\n    case 'GOODS':\n      return 'ðŸš‚'; // Steam locomotive emoji for goods trains\n    default:\n      return 'ðŸšƒ'; // Default railway car emoji\n  }\n};\n\nfunction App() {\n  const [simulationState, setSimulationState] = useState({ trains: [], simulation_time: \"00:00:00\" });\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetch('http://127.0.0.1:5001/api/get_simulation_state')\n        .then(response => response.json())\n        .then(data => setSimulationState(data))\n        .catch(error => console.error(\"Error fetching simulation state:\", error));\n    }, 2000); \n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const getTrainPosition = (positionKm) => {\n    const MAP_START_X = 210; \n    const MAP_END_X = 1310;\n    const ROUTE_LENGTH_KM = 192; // Must match the backend's route length\n\n    // Prevent train from going off-map\n    if (positionKm > ROUTE_LENGTH_KM) {\n      positionKm = ROUTE_LENGTH_KM;\n    }\n\n    const mapWidth = MAP_END_X - MAP_START_X;\n    const percentage = positionKm / ROUTE_LENGTH_KM;\n    const xPos = MAP_START_X + (percentage * mapWidth);\n    const yPos = 151;\n\n    return { left: xPos, top: yPos };\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>AI Train Traffic Control</h1>\n      <h2>Simulation Time: {simulationState.simulation_time}</h2>\n      <div className=\"dashboard\">\n        <TrainMap />\n        {simulationState.trains.map(train => {\n          const position = getTrainPosition(train.position_km);\n          return (\n            <div \n              key={train.id} \n              className=\"train-icon\" \n              style={{ left: `${position.left}px`, top: `${position.top}px` }}\n              title={`${train.name} (${train.id}) - Status: ${train.status}`}\n            >\n              {getTrainIcon(train.type)} {/* Display the correct emoji */}\n              <div className=\"train-label\">{train.id}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}