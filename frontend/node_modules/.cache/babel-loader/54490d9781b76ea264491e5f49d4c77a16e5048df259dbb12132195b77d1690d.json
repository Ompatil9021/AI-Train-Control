{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-train-control\\\\frontend\\\\src\\\\TrainMap.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// frontend/src/TrainMap.js\n\nconst TrainMap = () => {\n  // This helper function creates the SVG path for a curved siding at a specific station\n  const createLoopLine = (id, centerX) => {\n    const width = 120; // How long the siding is\n    const curve = 20; // How much it curves\n    const startX = centerX - width / 2;\n    const endX = centerX + width / 2;\n    const mainY = 151; // Y position of the main track\n    const loopY = 121; // Y position of the loop track\n\n    // This string defines the SVG path: M=Move, C=Curve, L=Line\n    const pathData = `M ${startX} ${mainY} C ${startX + curve} ${mainY}, ${startX + curve} ${loopY}, ${startX + curve * 2} ${loopY} L ${endX - curve * 2} ${loopY} C ${endX - curve} ${loopY}, ${endX - curve} ${mainY}, ${endX} ${mainY}`;\n    return /*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      d: pathData,\n      stroke: \"#888888\",\n      strokeWidth: \"3\",\n      fill: \"none\",\n      strokeDasharray: \"5,5\"\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Define our stations\n  const stations = [{\n    x: 210,\n    name: \"MUMBAI CST\"\n  }, {\n    x: 450,\n    name: \"THANE\"\n  }, {\n    x: 700,\n    name: \"KALYAN\"\n  }, {\n    x: 890,\n    name: \"KARJAT\"\n  }, {\n    x: 1070,\n    name: \"LONAVALA\"\n  }, {\n    x: 1310,\n    name: \"PUNE\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"250\",\n    viewBox: \"0 0 1400 250\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    style: {\n      backgroundColor: '#f8f9fa',\n      border: '1px solid #dee2e6',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Professional Railway Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      id: \"main-track\",\n      x1: \"150\",\n      y1: \"151\",\n      x2: \"1370\",\n      y2: \"151\",\n      stroke: \"#333333\",\n      strokeWidth: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), stations.map(station => createLoopLine(`loop-track-${station.name.toLowerCase().replace(' ', '')}`, station.x)), stations.map(station => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: station.x,\n        cy: \"151\",\n        rx: \"10\",\n        ry: \"10\",\n        fill: \"#1f77b4\",\n        stroke: \"#ffffff\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: station.x,\n        y: \"185\",\n        fontFamily: \"Helvetica\",\n        fontSize: \"12px\",\n        fontWeight: \"bold\",\n        textAnchor: \"middle\",\n        children: station.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, station.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = TrainMap;\nexport default TrainMap;\nvar _c;\n$RefreshReg$(_c, \"TrainMap\");","map":{"version":3,"names":["TrainMap","createLoopLine","id","centerX","width","curve","startX","endX","mainY","loopY","pathData","_jsxDEV","d","stroke","strokeWidth","fill","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","stations","x","name","height","viewBox","xmlns","style","backgroundColor","border","borderRadius","children","x1","y1","x2","y2","map","station","toLowerCase","replace","cx","cy","rx","ry","y","fontFamily","fontSize","fontWeight","textAnchor","_c","$RefreshReg$"],"sources":["D:/ai-train-control/frontend/src/TrainMap.js"],"sourcesContent":["// frontend/src/TrainMap.js\r\n\r\nconst TrainMap = () => {\r\n  // This helper function creates the SVG path for a curved siding at a specific station\r\n  const createLoopLine = (id, centerX) => {\r\n    const width = 120; // How long the siding is\r\n    const curve = 20;  // How much it curves\r\n    const startX = centerX - (width / 2);\r\n    const endX = centerX + (width / 2);\r\n    const mainY = 151; // Y position of the main track\r\n    const loopY = 121; // Y position of the loop track\r\n    \r\n    // This string defines the SVG path: M=Move, C=Curve, L=Line\r\n    const pathData = `M ${startX} ${mainY} C ${startX + curve} ${mainY}, ${startX + curve} ${loopY}, ${startX + (curve * 2)} ${loopY} L ${endX - (curve * 2)} ${loopY} C ${endX - curve} ${loopY}, ${endX - curve} ${mainY}, ${endX} ${mainY}`;\r\n    \r\n    return (\r\n      <path\r\n        key={id}\r\n        id={id}\r\n        d={pathData}\r\n        stroke=\"#888888\"\r\n        strokeWidth=\"3\"\r\n        fill=\"none\"\r\n        strokeDasharray=\"5,5\"\r\n      />\r\n    );\r\n  };\r\n\r\n  // Define our stations\r\n  const stations = [\r\n    { x: 210, name: \"MUMBAI CST\" }, { x: 450, name: \"THANE\" },\r\n    { x: 700, name: \"KALYAN\" }, { x: 890, name: \"KARJAT\" },\r\n    { x: 1070, name: \"LONAVALA\" }, { x: 1310, name: \"PUNE\" }\r\n  ];\r\n\r\n  return (\r\n    <svg \r\n      width=\"100%\" \r\n      height=\"250\" \r\n      viewBox=\"0 0 1400 250\" \r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{ backgroundColor: '#f8f9fa', border: '1px solid #dee2e6', borderRadius: '8px' }}\r\n    >\r\n      <title>Professional Railway Route</title>\r\n      \r\n      <line id=\"main-track\" x1=\"150\" y1=\"151\" x2=\"1370\" y2=\"151\" stroke=\"#333333\" strokeWidth=\"4\" />\r\n\r\n      {/* Automatically create a loop line for each station */}\r\n      {stations.map(station => createLoopLine(`loop-track-${station.name.toLowerCase().replace(' ', '')}`, station.x))}\r\n      \r\n      {/* Draw the stations */}\r\n      {stations.map(station => (\r\n        <g key={station.name}>\r\n          <ellipse cx={station.x} cy=\"151\" rx=\"10\" ry=\"10\" fill=\"#1f77b4\" stroke=\"#ffffff\" strokeWidth=\"2\" />\r\n          <text x={station.x} y=\"185\" fontFamily=\"Helvetica\" fontSize=\"12px\" fontWeight=\"bold\" textAnchor=\"middle\">{station.name}</text>\r\n        </g>\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default TrainMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}